#!/bin/sh

# PRE-LOCK HOOK
#
# The pre-lock hook is invoked before an exclusive lock is
# created.  Subversion runs this hook by invoking a program
# (script, executable, binary, etc.) named 'pre-lock' (for which
# this file is a template), with the following ordered arguments:
#
#   [1] REPOS-PATH   (the path to this repository)
#   [2] PATH         (the path in the repository about to be locked)
#   [3] USER         (the user creating the lock)
#   [4] COMMENT      (the comment of the lock)
#   [5] STEAL-LOCK   (1 if the user is trying to steal the lock, else 0)
#
# If the hook program outputs anything on stdout, the output string will
# be used as the lock token for this lock operation.  If you choose to use
# this feature, you must guarantee the tokens generated are unique across
# the repository each time.
#
# The default working directory for the invocation is undefined, so
# the program should set one explicitly if it cares.
#
# If the hook program exits with success, the lock is created; but
# if it exits with failure (non-zero), the lock action is aborted
# and STDERR is returned to the client.

# On a Unix system, the normal procedure is to have 'pre-lock'
# invoke other programs to do the real work, though it may do the
# work itself too.
#
# Note that 'pre-lock' must be executable by the user(s) who will
# invoke it (typically the user httpd runs as), and that user must
# have filesystem-level permission to access the repository.
#
# On a Windows system, you should name the hook program
# 'pre-lock.bat' or 'pre-lock.exe',
# but the basic idea is the same.
#
# Here is an example hook script, for a Unix /bin/sh interpreter:

REPOS="$1"
PATH="$2"
USER="$3"


GREP=/bin/grep
SED=/bin/sed
CAT=/bin/cat
AWK=/bin/awk

# Chinese filename are not allow
SVNLOOK=/usr/bin/svnlook
$SVNLOOK changed -t "$PATH" "$REPOS" | $AWK '{print $2}' | $GREP -e "[^a-zA-Z0-9._-/]"

if [ $? -eq 0 ]; then
        echo "Chinese filename are not allow!" >&2
        exit 1;
fi

# If a lock exists and is owned by a different person, don't allow it
# to be stolen (e.g., with 'svn lock --force ...').

# (Maybe this script could send email to the lock owner?)
SVNLOOK=/usr/bin/svnlook
GREP=/bin/grep
SED=/bin/sed
CAT=/bin/cat

LOCK_OWNER=`$SVNLOOK dirs-changed "$REPOS" -t "$PATH"`
LOGCHK=`$SVNLOOK log -t "$PATH" "$REPOS" | $GREP "checker"`


# If we get no result from svnlook, there's no lock, allow the lock to
# happen:
echo "$LOCK_OWNER" 1>&2
#/bin/echo "$LOCK_OWNER" >>/data/logs/svn/a.txt

if [ ${LOCK_OWNER:0:3} != "bbt" ]; then
  if [ "$LOGCHK" = "" ]; then
    echo "must has checker in log message!" 1>&2
    exit 1
  fi

  LOCKSTAT=`$CAT /data/svndata/CServer/gunsoul/lockstatu.txt`
  if [ ${LOCK_OWNER:0:6} == "en_pub" ]&&[ ! -z "`echo $LOCKSTAT|$GREP 2`" ]; then
    echo "commit server build is permitted!"
    exit 1
  fi

  if [ ${LOCK_OWNER:0:9} == "thai_main" ]&&[ ! -z "`echo $LOCKSTAT|$GREP 3`" ]; then
    echo "commit server build is permitted!"
    exit 1
  fi

  if [ ${LOCK_OWNER:0:19} == "branches/tw_gunsoul" ]&&[ ! -z "`echo $LOCKSTAT|$GREP 4`" ]; then
    echo "commit server build is permitted!"
    exit 1
  fi
  
  if [ ${LOCK_OWNER:0:7} == "bz_main" ]&&[ ! -z "`echo $LOCKSTAT|$GREP 5`" ]; then
    echo "commit server build is permitted!"
    exit 1
  fi

  if [ ${LOCK_OWNER:0:12} == "Vietnam_main" ]&&[ ! -z "`echo $LOCKSTAT|$GREP 6`" ]; then
    echo "commit server build is permitted!"
    exit 1
  fi

  if [ ${LOCK_OWNER:0:7} == "en_main" ]&&[ ! -z "`echo $LOCKSTAT|$GREP 7`" ]; then
    echo "commit server build is permitted!"
    exit 1
  fi

  if [ ${LOCK_OWNER:0:12} == "expendables3" ]&&[ ! -z "`echo $LOCKSTAT|$GREP 8`" ]; then
    echo "commit server build is permitted!"
    exit 1
  fi
 /data/svndata/run_jenkins.sh ${LOCK_OWNER}

 # echo "not bbt no locktest $2 $3 " 1>&2
  exit 0
fi

# if not set lockbbt then skip
LOCKSTAT=`$CAT /data/svndata/CServer/gunsoul/lockstatu.txt`
#if [ "$LOCKSTAT" == "0" ]; then
if [ -z "`echo $LOCKSTAT|$GREP 1`" ]; then
  if [ "$LOGCHK" == "" ]; then
    echo "must has checker in log message!" 1>&2
    exit 1
  fi

/data/svndata/run_jenkins.sh ${LOCK_OWNER}
  exit 0
fi


if [ ${LOCK_OWNER:0:18} == "bbt/Release/server" ]; then
  echo "commit server build is permitted!"
  exit 0
fi


/data/svndata/run_jenkins.sh ${LOCK_OWNER}
# Otherwise, we've got an owner mismatch, so return failure:

echo "Error: ${CPATH}  ${LOCK_OWNER} already locked by tester." 1>&2

exit 1